clear
close all

% Membrane potential
Vm = -50;

% Old or new fit
newf = true;
ln = 15;

truegi = 50;
truege = 30;
truetre = 0.7;
truetdi = 6.2;
truetri = 3.7;
truetde = 2.2;

% Generate data and add noise
[EPSC,IPSC,CPSC,t] = generate_current(truegi,truege,0,-70,Vm,truetri, truetdi, truetre, truetde,60);

% True values for comparison with fit
True_values = {truegi,truege,truetde,truetdi,truetre,truetri};

% Create table
Table_True = cell2table(True_values,'VariableNames',{'Fun_Max conductance Chloride','Fun_Max conductance Glutamate', 'Fun_Tau Decay Ex', 'Fun_Tau decay In', 'Fun_Tau rise Ex', 'Fun_Tau rise In'});

% Initial values for fitting
gmc = 1 + (150-1) .* rand(1,1); gmg = 1 + (150-1) .* rand(1,1); tde = truetde + truetde * 0.1; tdi = truetdi + truetdi * 0.25; tre = truetre + truetre * 0.2; tri = truetri + truetri * 0.2;
lower_tde = tde - (tde * 0.3); lower_tdi = tdi - (tdi * 0.3); lower_tre = tre - (tre * 0.3); lower_tri = tri - (tri * 0.3);
upper_tde = tde + (tde * 0.3); upper_tdi = tdi + (tdi * 0.3); upper_tre = tre + (tre * 0.3); upper_tri = tri + (tri * 0.3);

zmax = 200; % number of iterations

%Preallocation
final_Gi = zeros(1,zmax);
final_Ge = zeros(1,zmax);
final_tau_decay_e = zeros(1,zmax);
final_tau_decay_i = zeros(1,zmax);
final_tau_rise_e = zeros(1,zmax);
final_tau_rise_i = zeros(1,zmax);
sse = zeros(1,zmax);
rsquare = zeros(1,zmax);
adjrsquare = zeros(1,zmax);
rmse = zeros(1,zmax);

% zmax iterations
for z = 1:zmax
    
    %% Fit model to data
    % Apply white noise to the CPSC
    y = awgn(CPSC,ln,'measured');
    
    %% Perform fit
    [xData, yData] = prepareCurveData(t, y);
    % Set up fittype and options.
    ft = fittype( '((Ge) .* (tau_rise_e * tau_decay_e / (tau_rise_e - tau_decay_e)) * ((exp(-t / tau_rise_e)) - exp(-t / tau_decay_e)) * (Vm - EGlu)) + ((Gi) .* (tau_rise_i * tau_decay_i / (tau_rise_i - tau_decay_i)) * ((exp(-t / tau_rise_i)) - exp(-t / tau_decay_i)) * (Vm - EChl))', 'independent', 't', 'dependent', 'y' );
    opts = fitoptions( 'Method', 'NonlinearLeastSquares', 'MaxIter', 50000);
    
    
    opts.Lower      = [-70 0 1   1   Vm lower_tde lower_tdi lower_tre lower_tri];
    opts.StartPoint = [-70 0 gmc gmg Vm tde tdi tre tri]; % Starting values
    opts.Upper      = [-70 0 150 150 Vm upper_tde upper_tdi upper_tre upper_tri];
    
    [fitresult1, gof1] = fit(xData, yData, ft, opts) % Fit
    
    %Store values
    final_Gi(z) = fitresult1.Gi;
    final_Ge(z) = fitresult1.Ge;
    final_tau_decay_e(z) = fitresult1.tau_decay_e;
    final_tau_decay_i(z) = fitresult1.tau_decay_i;
    final_tau_rise_e(z) = fitresult1.tau_rise_e;
    final_tau_rise_i(z) = fitresult1.tau_rise_i;
    sse(z) = gof1.sse;
    rsquare(z) = gof1.rsquare;
    adjrsquare(z) = gof1.adjrsquare;
    rmse(z) = gof1.rmse;
    
    % Plot the fit vs the true values
    IPSC_fit = ((fitresult1.Gi) .* (fitresult1.tau_rise_i * fitresult1.tau_decay_i / (fitresult1.tau_rise_i - fitresult1.tau_decay_i)) * ((exp(-t / fitresult1.tau_rise_i)) - exp(-t / fitresult1.tau_decay_i)) * (Vm - fitresult1.EChl));
    EPSC_fit = ((fitresult1.Ge) .* (fitresult1.tau_rise_e * fitresult1.tau_decay_e / (fitresult1.tau_rise_e - fitresult1.tau_decay_e)) * ((exp(-t / fitresult1.tau_rise_e)) - exp(-t / fitresult1.tau_decay_e)) * (Vm - fitresult1.EGlu));
    CPSC_fit = IPSC_fit + EPSC_fit;
    
    %% Plot fit with data
    %         figure
    %         set(gcf,'color','w');
    %         subplot(3,1,1)
    %         plot(t,y)
    %         hold on
    %         plot(t,CPSC_fit)
    %         formatSpec = 'Compound current at %d Vm';
    %         A1 = Vm;
    %         str = sprintf(formatSpec,A1);
    %         title(str)
    %         legend("Recorded","Fit")
    %         xlabel('Time (ms)')
    %         ylabel("Current (pA)")
    
    %         subplot(3,1,2)
    %         plot(t,IPSC)
    %         hold on
    %         plot(t,IPSC_fit)
    %         title("Inhibitory current")
    %         legend("Recorded","Fit")
    %         xlabel('Time (ms)')
    %         ylabel("Current (pA)")
    %
    %         subplot(3,1,3)
    %         plot(t,EPSC)
    %         hold on
    % %         plot(t,EPSC_fit)
    % %         title("Excitatory current")
    % %         legend("Recorded","Fit")
    % %         xlabel('Time (ms)')
    %         ylabel("Current (pA)")
    
    
end

